name: Build Channels

on:
  push:

jobs:
  fetch-refs:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.fetch-refs.outputs.matrix }}
    steps:
      - id: fetch-refs
        run: |
          echo "::set-output name=matrix::$(echo $(curl -s https://api.github.com/repos/flutter/flutter/git/refs/heads) $(curl -s https://api.github.com/repos/flutter/flutter/git/refs/tags) | jq '.[]' | jq -s | jq 'map(.ref) | map(sub("refs/heads/"; "")) | map(sub("refs/tags/"; ""))' | jq -c '{channel: . , include: map({channel:  . , tags: [ if . == "stable" then ., "latest" else . end ]})}')"
      - run: echo ${{ fromJson(steps.fetch-refs.outputs.matrix) }}
      - run: |
          echo "::set-output name=SELECTED_COLOR::$(echo test)"
        id: random-color-generator
      - run: echo ${{ steps.random-color-generator.outputs.SELECTED_COLOR }}
  build:
    needs: fetch-refs
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.fetch-refs.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v2
      - name: setup buildx
        uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push image
        run: |
          docker build \
            -t fischerscode/flutter:${{ join(matrix.tags, ' -t fischerscode/flutter:') }} \
            --build-arg=flutterVersion=${{ matrix.channel }} \
            --cache-from=type=registry,ref=fischerscode/flutter-cache:${{ matrix.channel }} \
            --cache-to=type=registry,ref=fischerscode/flutter-cache:${{ matrix.channel }},mode=max \
            --push \
            .
