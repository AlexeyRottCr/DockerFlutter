name: Build Tags

on:
  push:
  schedule:
    - cron: "*/10 * * * *"
  workflow_dispatch:

jobs:
  fetch-tags:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.fetch-refs.outputs.matrix }}
      empty_matrix: ${{ steps.check-matrix.outputs.empty_matrix }}
    steps:
      - id: fetch-refs
        run: |
          dockerApiToken="$(curl --silent --get --data-urlencode service=registry.docker.io --data-urlencode scope=repository:fischerscode/flutter:pull https://auth.docker.io/token | jq --raw-output '.token')"
          curl --silent --get -H "Accept: application/json" -H "Authorization: Bearer $dockerApiToken" https://registry-1.docker.io/v2/fischerscode/flutter/tags/list | jq '.tags' > dockerhub-tags.json
          cat dockerhub-tags.json ignored_tags.json | jq -s 'map(.[])' > existing-tags.json
          matrix=$(curl -s https://api.github.com/repos/flutter/flutter/git/refs/tags | jq 'map(.ref) | map(sub("refs/tags/"; "")) | .[]' | xargs -L1 -I TAG sh -c "cat existing-tags.json | jq 'select(all(.[]; .==(\"TAG\" | sub(\"\\\\+\"; \"_\"; \"g\")) | not)) | \"TAG\"'" | jq -s '.[:20]' | jq -c '{channel: . , include: map({channel:  . , tags: [ if . == "stable" then ., "latest" else . end ]})}')
          echo "::set-output name=matrix::$matrix"
      - name: Check matrix
        id: check-matrix
        run: |
          echo "::set-output name=empty_matrix::$(echo '${{ steps.fetch-refs.outputs.matrix }}' | jq '.channel | length > 0 | not')"
  build-tags:
    needs: fetch-tags
    runs-on: ubuntu-latest
    if: ${{ needs.fetch-tags.outputs.empty_matrix == 'false' }}
    strategy:
      matrix: ${{fromJson(needs.fetch-tags.outputs.matrix)}}
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: setup buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push image
        run: |
          docker build \
            -t fischerscode/flutter:$(echo ${{ join(matrix.tags, ' | tr + _) -t fischerscode/flutter:$(echo ') }} | tr + _) \
            --build-arg=flutterVersion=${{ matrix.channel }} \
            --cache-from=type=registry,ref=fischerscode/flutter-cache:$(echo ${{ matrix.channel }} | tr + _) \
            --cache-to=type=registry,ref=fischerscode/flutter-cache:$(echo ${{ matrix.channel }} | tr + _),mode=max \
            --push \
            --platform linux/amd64,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/s390x \
            .
